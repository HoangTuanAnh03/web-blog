name: CI/CD to EC2 (Jib ➜ Docker Hub ➜ Docker Compose)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  APP_DIR: /opt/myapp
  DOCKERHUB_IMAGE: tuananh177/web-blog:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Make mvnw executable (and fix line endings)
        run: |
          test -f mvnw || { echo "mvnw not found at repo root"; ls -la; exit 1; }
          sed -i 's/\r$//' mvnw || true
          chmod +x mvnw

      # (tuỳ chọn) chạy test
      - name: Build & Test
        run: ./mvnw -B -DskipTests=true clean package

      # Build & push bằng Jib -> Docker Hub (tag latest theo pom.xml)
      - name: Jib build & push (latest)
        env:
          JIB_TO_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          JIB_TO_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ./mvnw -B -DskipTests \
            -Djib.to.auth.username="${JIB_TO_USERNAME}" \
            -Djib.to.auth.password="${JIB_TO_PASSWORD}" \
            jib:build

      # Deploy lên EC2: kéo latest và up
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || 22 }}
          debug: true
          script_stop: true
          command_timeout: 10m
          envs: APP_DIR
          script: |
            set -e
            set -x

            # login nếu repo Docker Hub là private
            if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
              echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            fi

            # Kiểm tra compose file
            test -f "$APP_DIR/docker-compose.yml"

            # Chạy trong thư mục app (Compose sẽ tự load .env nếu có, nhưng ta không cần)
            cd "$APP_DIR"

            # (khuyến nghị) dọn nhẹ trước khi pull
            docker image prune -af || true

            docker compose pull
            docker compose up -d
            docker compose ps